// <auto-generated />
using ExpressAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpressAPI.Migrations
{
    [DbContext(typeof(ReturnHeadDbContext))]
    [Migration("20181106183245_initialmigr")]
    partial class initialmigr
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExpressAPI.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("AddressLine3");

                    b.Property<string>("CareOfName");

                    b.Property<string>("CityName");

                    b.Property<string>("CompanyName");

                    b.Property<string>("ContactType");

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("CustomerType");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("IdentityNumber");

                    b.Property<string>("IdentityType");

                    b.Property<string>("IkeaFamilyNumber");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("OrganisationNumber");

                    b.Property<string>("PassportNumber");

                    b.Property<string>("PersonTitle");

                    b.Property<string>("PostCode");

                    b.Property<string>("PreferedLanguage");

                    b.Property<string>("Province");

                    b.Property<string>("State");

                    b.Property<string>("TaxIdType");

                    b.Property<string>("TaxRegNo");

                    b.Property<string>("TelephoneHome");

                    b.Property<string>("TelephoneMobile");

                    b.Property<string>("TelephoneWork");

                    b.HasKey("Id");

                    b.ToTable("CustomerDTOs");
                });

            modelBuilder.Entity("ExpressAPI.Models.Line", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ItemId");

                    b.Property<int>("Quantity");

                    b.Property<string>("ReasonCode");

                    b.Property<string>("ReturnHeadId");

                    b.Property<string>("SubReasonCode");

                    b.HasKey("Id");

                    b.HasIndex("ReturnHeadId");

                    b.ToTable("LineDTOs");
                });

            modelBuilder.Entity("ExpressAPI.Models.ReturnHead", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BuCode");

                    b.Property<string>("CustomerId");

                    b.Property<string>("Date");

                    b.Property<string>("OrderNumber");

                    b.Property<string>("TillNumber");

                    b.Property<string>("TransactionNumber");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ReturnHeadDTOs");
                });

            modelBuilder.Entity("ExpressAPI.Models.Line", b =>
                {
                    b.HasOne("ExpressAPI.Models.ReturnHead")
                        .WithMany("Lines")
                        .HasForeignKey("ReturnHeadId");
                });

            modelBuilder.Entity("ExpressAPI.Models.ReturnHead", b =>
                {
                    b.HasOne("ExpressAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
